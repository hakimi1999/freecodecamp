/* This is a trick that helps visualize where elements are and their size.
Can remove this later. */

:root {
    /* To use a variable, put the variable name in parentheses 
    with var in front of them: */
    --building-color1: #aa80ff;
    --building-color2: #66cc99;
    --building-color3: #cc6699;
    --building-color4: #538cc6;
    --window-color1: black;
    --window-color2: #8cd9b3;
    --window-color3: #d98cb3;
}

* {
    border: 1px solid black;

    /* Also adding box-sizing: border-box doesn't add any border 
    size to elements */
    box-sizing: border-box;

}

body {
    height: 100vh;
    margin: 0;

    /* hide any scroll bars that appear when something extends past viewport */
    overflow: hidden;
}

/* Make full use of parent's (aka body) width and height */
.background-buildings,
.foreground-buildings {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    /*  Using flexbox, aligning buildings to bottom, and justify content to 
    evenly space them. */
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;
}


/* BACKGROUND BUILDINGS - "bb" stands for "background building" */
/* Center bb1 parts by using flex-direction: center; */
.bb1 {
    width: 10%;
    height: 70%;
    display: flex;
    flex-direction: column;
    align-items: center;

    /* Variable declaration begin with two dashes (--) */
    /* Variables declared in this element doesn't cascade to other
    sibling elements (only usable in its child elements). */
    /* --building-color1: #aa80ff;
    --building-color2: #66cc99;
    --building-color3: #cc6699; */


}

.bb1a {
    width: 70%;
}

.bb1b {
    width: 80%;
}

.bb1c {
    width: 90%;
}

.bb1d {
    width: 100%;
    height: 70%;
    background: linear-gradient(var(--building-color1) 50%, var(--window-color1));
}

.bb1-window {
    height: 10%;
    background: linear-gradient(var(--building-color1), var(--window-color1));
}


.bb2 {
    width: 10%;
    height: 50%;

    /* This variable has fallback value, in which auto change to 2nd one
if 1st value doesn't work */
    /* background-color: var(--building-color2, green); */
}

/* make triangle */
.bb2a {
    border-right: 5vw solid transparent;
    border-bottom: 5vh solid var(--building-color2);
    border-left: 5vw solid transparent;
}

.bb2b {
    width: 100%;
    height: 100%;

    /* repeating-linear-gradient() repeats the gradient until it gets to the end */
    background: repeating-linear-gradient(var(--building-color2) 0%,
            var(--building-color2) 6%,
            var(--window-color2) 6%,
            var(--window-color2) 9%);
}

.bb3 {
    width: 10%;
    height: 55%;
    /* background-color: var(--building-color3, pink); */
    background-color: var(--building-color3);

}

.bb4 {
    width: 11%;
    height: 58%;
    background-color: var(--building-color4);

}



/* FOREGROUND BUILDINGS - "fb" stands for "foreground building" */
.fb1 {
    width: 10%;
    height: 60%;
    background-color: var(--building-color4);
}

.fb2 {
    width: 10%;
    height: 40%;
    background-color: var(--building-color3);
}

.fb3 {
    width: 10%;
    height: 35%;
    background-color: var(--building-color1);
}

.fb4 {
    width: 8%;
    height: 45%;
    background-color: var(--building-color1);
    position: relative;
    left: 10%;
}

.fb5 {
    width: 10%;
    height: 33%;
    background-color: var(--building-color2);
    position: relative;
    right: 10%;

}

.fb6 {
    width: 9%;
    height: 38%;
    background-color: var(--building-color3);
}